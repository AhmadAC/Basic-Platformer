# Level Data: booooi
# Generated by Platformer Level Editor
# This file contains data structures that can be loaded by the game engine.
# It does not instantiate game objects directly.

def get_map_data_booooi():
    level_data = {
        "map_name": 'booooi',
        "background_color": (0, 100, 0),
        "player1_spawn_pos": (10.5, 358.0),
        "player1_spawn_props": {},
        "platforms_data": [{'x': 0.0, 'y': 380.0, 'w': 120.0, 'h': 20.0, 'color': (128, 128, 128), 'type': 'wall'}, {'x': 120.0, 'y': 340.0, 'w': 40.0, 'h': 20.0, 'color': (128, 128, 128), 'type': 'wall'}, {'x': 120.0, 'y': 360.0, 'w': 80.0, 'h': 40.0, 'color': (128, 128, 128), 'type': 'wall'}, {'x': 320.0, 'y': 360.0, 'w': 80.0, 'h': 40.0, 'color': (128, 128, 128), 'type': 'wall'}, {'x': 360.0, 'y': 340.0, 'w': 40.0, 'h': 20.0, 'color': (128, 128, 128), 'type': 'wall'}, {'x': 400.0, 'y': 380.0, 'w': 120.0, 'h': 20.0, 'color': (128, 128, 128), 'type': 'wall'}, {'x': 0.0, 'y': 200.0, 'w': 1000.0, 'h': 40.0, 'color': (50, 50, 50), 'type': 'boundary_wall_top'}, {'x': 0.0, 'y': 521.0, 'w': 1000.0, 'h': 40.0, 'color': (50, 50, 50), 'type': 'boundary_wall_bottom'}, {'x': -40.0, 'y': 200.0, 'w': 40.0, 'h': 361.0, 'color': (50, 50, 50), 'type': 'boundary_wall_left'}, {'x': 1000.0, 'y': 200.0, 'w': 40.0, 'h': 361.0, 'color': (50, 50, 50), 'type': 'boundary_wall_right'}],
        "ladders_data": [],
        "hazards_data": [{'x': 80.0, 'y': 480.0, 'w': 40.0, 'h': 41.0, 'color': (255, 0, 255), 'type': 'lava'}, {'x': 520.0, 'y': 360.0, 'w': 120.0, 'h': 41.0, 'color': (255, 0, 255), 'type': 'lava'}],
        "enemy_spawns_data": [],
        "collectible_spawns_data": [],
        "statue_spawns_data": [],
        "dimensions_data": {'map_total_width_pixels': 1000.0, 'level_min_y_absolute': 240.0, 'level_max_y_absolute': 521.0, 'main_ground_y_reference': 521.0, 'main_ground_height_reference': 40.0}
    }
    return level_data

if __name__ == '__main__':
    # Example of how to load and print the data
    data = get_map_data_booooi()
    import json
    print(json.dumps(data, indent=4))
