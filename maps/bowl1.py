# Level: bowl1
# Generated by Platformer Level Editor (Optimized Export)
import pygame
from tiles import Platform, Ladder, Lava
import constants as C

LEVEL_SPECIFIC_BACKGROUND_COLOR = (173, 216, 230)

def load_map_bowl1(initial_screen_width, initial_screen_height):
    """
    Loads the 'bowl1' level.
    """
    print(f"Loading map: load_map_bowl1...")
    platforms = pygame.sprite.Group()
    ladders = pygame.sprite.Group()
    hazards = pygame.sprite.Group()
    enemy_spawns_data = []
    collectible_spawns_data = []

    player1_spawn = (209, 1917.0)

    # --- Placed Objects (merged where possible) ---
    platforms.add(Platform(360, 1880.0, 40, 10, (0,100,0), platform_type='ledge'))
    platforms.add(Platform(0, 1280.0, 80, 680, (128,128,128), platform_type='wall'))
    platforms.add(Platform(0.0, 2000, 880, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(0, 1960.0, 2040, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(160, 1920, 120, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(320, 1920, 80, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(360, 1480.0, 40, 400, (128,128,128), platform_type='wall'))
    platforms.add(Platform(520, 1920, 80, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(720, 1920, 1320, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(880, 1880, 200, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(1000.0, 1800.0, 120, 80, (128,128,128), platform_type='wall'))
    platforms.add(Platform(1040.0, 1760.0, 80, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(1040.0, 2000.0, 80, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(1160.0, 2000.0, 80, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(1680.0, 1880.0, 360, 40, (128,128,128), platform_type='wall'))
    platforms.add(Platform(1880.0, 1800, 160, 80, (128,128,128), platform_type='wall'))
    platforms.add(Platform(1920.0, 1280.0, 80, 520, (128,128,128), platform_type='wall'))
    platforms.add(Platform(1960.0, 2000, 80, 40, (128,128,128), platform_type='wall'))
    # No ladders placed.
    hazards.add(Lava(600.0, 1920.0, 40, 40, (255,69,0)))
    hazards.add(Lava(680.0, 1920.0, 40, 40, (255,69,0)))
    hazards.add(Lava(640.0, 1920.0, 40, 40, (255,69,0)))
    enemy_spawns_data.append({'pos': (1089.0, 1757), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1717), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1677), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1637), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1597), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1557), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1517), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1477), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1437), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1397), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1357), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1317.0), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1277.0), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1197.0), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1157.0), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (1089.0, 1237.0), 'patrol': None, 'enemy_color_id': 'pink'})
    collectible_spawns_data.append({'type': 'chest', 'pos': (906.0, 1879.0)})
    collectible_spawns_data.append({'type': 'chest', 'pos': (1306.0, 1919)})

    # --- Level Dimensions for Game Camera & Boundaries ---
    map_total_width_pixels = 2200
    level_min_y_absolute = 1040
    level_max_y_absolute = 2040
    main_ground_y_reference = 2040
    main_ground_height_reference = 40

    _boundary_thickness = C.TILE_SIZE * 2
    _boundary_wall_height = level_max_y_absolute - level_min_y_absolute + (2 * _boundary_thickness)
    _boundary_color = getattr(C, 'DARK_GRAY', (50,50,50))

    # Filler wall on the right to ensure no empty background padding
    platforms.add(Platform(2040, level_min_y_absolute - _boundary_thickness, 160, _boundary_wall_height, _boundary_color, platform_type='wall'))

    # Boundary platforms (these define the absolute edges of the level area)
    # Top boundary (ceiling)
    platforms.add(Platform(0, level_min_y_absolute - _boundary_thickness, map_total_width_pixels, _boundary_thickness, _boundary_color, platform_type="boundary_wall_top"))
    # Bottom boundary (floor/kill plane)
    platforms.add(Platform(0, level_max_y_absolute, map_total_width_pixels, _boundary_thickness, _boundary_color, platform_type="boundary_wall_bottom"))
    # Left boundary
    platforms.add(Platform(-_boundary_thickness, level_min_y_absolute - _boundary_thickness, _boundary_thickness, _boundary_wall_height, _boundary_color, platform_type="boundary_wall_left"))
    # Right boundary (placed at the very edge of map_total_width_pixels)
    platforms.add(Platform(map_total_width_pixels, level_min_y_absolute - _boundary_thickness, _boundary_thickness, _boundary_wall_height, _boundary_color, platform_type="boundary_wall_right"))

    print(f"Map 'load_map_bowl1' loaded with: {len(platforms)} platforms, {len(ladders)} ladders, {len(hazards)} hazards.")
    return (platforms, ladders, hazards, enemy_spawns_data, collectible_spawns_data,
            player1_spawn,
            map_total_width_pixels, level_min_y_absolute, level_max_y_absolute,
            main_ground_y_reference, main_ground_height_reference,
            LEVEL_SPECIFIC_BACKGROUND_COLOR)