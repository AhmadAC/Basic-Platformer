# Level: 2
# Generated by Platformer Level Editor version X.Y.Z # Consider adding a version
import pygame
from tiles import Platform, Ladder, Lava # Ensure all used tile types are imported
import constants as C

LEVEL_SPECIFIC_BACKGROUND_COLOR = (173, 216, 230)

def load_map_2(initial_screen_width, initial_screen_height):
    """
    Loads the '2' level.
    """
    print(f"Loading map: load_map_2...")
    platforms = pygame.sprite.Group()
    ladders = pygame.sprite.Group() # Ensure ladders group is there if you add ladders
    hazards = pygame.sprite.Group()
    enemy_spawns_data = []
    collectible_spawns_data = []

    player1_spawn = (2020, 1040) # Default P1 Spawn

    # --- Placed Objects ---
    # No platforms placed.
    # No ladders placed.
    # No hazards placed.
    # No enemy spawns defined.
    # No collectible spawns defined.

    # --- Level Dimensions for Game Camera & Boundaries ---
    map_total_width_pixels = 4160
    level_min_y_absolute = -80
    level_max_y_absolute = 2080
    main_ground_y_reference = 2000
    main_ground_height_reference = 40

    # --- Auto-generated Boundary Walls ---
    _boundary_thickness = C.TILE_SIZE * 2
    _boundary_wall_height = level_max_y_absolute - level_min_y_absolute + (2 * _boundary_thickness)
    _boundary_color = getattr(C, 'DARK_GRAY', (50,50,50)) # Use a defined boundary color

    # Top boundary
    platforms.add(Platform(0, level_min_y_absolute - _boundary_thickness, map_total_width_pixels, _boundary_thickness, _boundary_color, platform_type="boundary_wall_top"))
    # Bottom boundary
    platforms.add(Platform(0, level_max_y_absolute, map_total_width_pixels, _boundary_thickness, _boundary_color, platform_type="boundary_wall_bottom"))
    # Left boundary
    platforms.add(Platform(-_boundary_thickness, level_min_y_absolute - _boundary_thickness, _boundary_thickness, _boundary_wall_height, _boundary_color, platform_type="boundary_wall_left"))
    # Right boundary
    platforms.add(Platform(map_total_width_pixels, level_min_y_absolute - _boundary_thickness, _boundary_thickness, _boundary_wall_height, _boundary_color, platform_type="boundary_wall_right"))

    print(f"Map 'load_map_2' loaded with: {len(platforms)} platforms, {len(ladders)} ladders, {len(hazards)} hazards.")
    return (platforms, ladders, hazards, enemy_spawns_data, collectible_spawns_data,
            player1_spawn,
            map_total_width_pixels, level_min_y_absolute, level_max_y_absolute,
            main_ground_y_reference, main_ground_height_reference,
            LEVEL_SPECIFIC_BACKGROUND_COLOR)
