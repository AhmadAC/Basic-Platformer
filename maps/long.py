# Level Data: long
# Generated by Platformer Level Editor

# This file contains data structures that can be loaded by the game engine.
# It does not instantiate game objects directly.

def get_map_data_long():
    level_data = {
        "map_name": 'long',
        "background_color": (173, 216, 230),
        "player1_spawn_pos": (130.5, 398.0),
        "player1_spawn_props": {},
        "platforms_data": [{'x': 0.0, 'y': 0.0, 'w': 120.0, 'h': 440.0, 'color': (128, 128, 128), 'type': 'wall'}, {'x': 0.0, 'y': -120.0, 'w': 3461.0, 'h': 40.0, 'color': (50, 50, 50), 'type': 'boundary_wall_top'}, {'x': 0.0, 'y': 440.0, 'w': 3461.0, 'h': 40.0, 'color': (50, 50, 50), 'type': 'boundary_wall_bottom'}, {'x': -40.0, 'y': -120.0, 'w': 40.0, 'h': 600.0, 'color': (50, 50, 50), 'type': 'boundary_wall_left'}, {'x': 3461.0, 'y': -120.0, 'w': 40.0, 'h': 600.0, 'color': (50, 50, 50), 'type': 'boundary_wall_right'}],
        "ladders_data": [],
        "hazards_data": [],
        "enemy_spawns_data": [{'pos': (530.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}, {'pos': (1010.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}, {'pos': (1330.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}, {'pos': (1650.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}, {'pos': (1930.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}, {'pos': (2250.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}, {'pos': (2610.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}, {'pos': (2930.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}, {'pos': (3290.5, 398.0), 'patrol': None, 'enemy_color_id': 'green', 'properties': {}}],
        "collectible_spawns_data": [],
        "statue_spawns_data": [],
        "dimensions_data": {'map_total_width_pixels': 3461.0, 'level_min_y_absolute': -80.0, 'level_max_y_absolute': 440.0, 'main_ground_y_reference': 440.0, 'main_ground_height_reference': 40.0}
    }
    return level_data

if __name__ == '__main__':
    # Example of how to load and print the data
    data = get_map_data_long()
    import json
    print(json.dumps(data, indent=4))
