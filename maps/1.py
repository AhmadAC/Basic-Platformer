# Level: 1
# Generated by Platformer Level Editor on 108706
import pygame
from tiles import Platform, Ladder, Lava # Ensure all used tile types are imported by game
import constants as C

# Optional: Define level-specific background color if your game supports it
LEVEL_SPECIFIC_BACKGROUND_COLOR = (75, 0, 130)

def load_map_1(initial_screen_width, initial_screen_height):
    """
    Loads the '1' level.
    Generated by the level editor.
    """
    print(f"Loading map: load_map_1...") # Game-side log
    platforms = pygame.sprite.Group()
    ladders = pygame.sprite.Group()
    hazards = pygame.sprite.Group()
    enemy_spawns_data = []
    collectible_spawns_data = []

    player1_spawn = (89, 757)
    
    # --- Placed Objects ---
    platforms.add(Platform(0, 0, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 0, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 40, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 40, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 80, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 120, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 160, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 200, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 240, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 280, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 320, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 160, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 120, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 80, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 200, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 240, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 280, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 320, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 360, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 360, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 400, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 440, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 480, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 400, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 440, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 520, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 560, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 600, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 480, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 520, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 640, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 680, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 600, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 560, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 640, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 680, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 720, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 720, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(0, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(40, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(80, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(120, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(160, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(200, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(240, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(280, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(320, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(360, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(400, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(440, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(480, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(520, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(560, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(600, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(640, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(680, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(720, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(760, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(800, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(840, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(880, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(920, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(960, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1000, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1040, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1080, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 760, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 720, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 680, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 640, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 600, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 560, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 520, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 480, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 440, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 400, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 360, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 320, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 280, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 240, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 200, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 160, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 120, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 80, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 720, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 680, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 640, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 600, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 560, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 520, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 440, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 480, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 400, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 360, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 320, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 280, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 240, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 200, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 160, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 120, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 80, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 40, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1120, 0, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 0, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1160, 40, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(80, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(120, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(160, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(200, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(320, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(360, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(400, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(440, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(480, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(520, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(80, 360, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(120, 360, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(160, 360, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(200, 360, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(240, 360, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(640, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(680, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(720, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(760, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(800, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(840, 600, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(760, 400, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(800, 400, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(840, 400, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(880, 400, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(920, 400, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(440, 240, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(480, 240, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(520, 240, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(560, 240, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(600, 240, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(240, 320, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(360, 440, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(560, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(600, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(640, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(680, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(720, 480, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(720, 440, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(720, 400, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(920, 360, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(720, 360, 40, 40, C.DARK_GREEN, platform_type='ledge'))
    platforms.add(Platform(480, 720, 40, 40, C.GRAY, platform_type='wall'))
    platforms.add(Platform(1000, 720, 40, 40, C.GRAY, platform_type='wall'))
    # No ladders placed.
    hazards.add(Lava(520, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(560, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(600, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(640, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(680, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(720, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(760, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(800, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(840, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(880, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(920, 760, 40, 40, C.ORANGE_RED))
    hazards.add(Lava(960, 760, 40, 40, C.ORANGE_RED))
    enemy_spawns_data.append({'pos': (769, 397), 'patrol': None, 'enemy_color_id': 'cyan'})
    enemy_spawns_data.append({'pos': (409, 477), 'patrol': None, 'enemy_color_id': 'pink'})
    enemy_spawns_data.append({'pos': (689, 597), 'patrol': None, 'enemy_color_id': 'red'})
    collectible_spawns_data.append({'type': 'chest', 'pos': (466, 239)})

    # --- Level Dimensions for Game Camera & Boundaries ---
    map_total_width_pixels = 1360
    level_min_y_absolute = -80 # Top-most Y coordinate for camera/content
    level_max_y_absolute = 880 # Bottom-most Y coordinate for camera/content (e.g., death plane below this)
    
    main_ground_y_reference = 800 # Y-value of the main 'floor' surface
    main_ground_height_reference = 40 # Height of typical ground tiles

    # --- Auto-generated Boundary Walls (Invisible in game unless styled) ---
    # These ensure entities cannot go outside the defined level space.
    _boundary_thickness = C.TILE_SIZE * 2 # Make them thick enough
    _boundary_wall_height = level_max_y_absolute - level_min_y_absolute + (2 * _boundary_thickness) # Span slightly beyond min/max_y

    # Top boundary (ceiling) - place its bottom edge at level_min_y_absolute
    platforms.add(Platform(0, level_min_y_absolute - _boundary_thickness, map_total_width_pixels, _boundary_thickness, C.DARK_GRAY, platform_type="boundary_wall_top"))
    # Bottom boundary (floor/kill plane) - place its top edge at level_max_y_absolute
    platforms.add(Platform(0, level_max_y_absolute, map_total_width_pixels, _boundary_thickness, C.DARK_GRAY, platform_type="boundary_wall_bottom"))
    # Left boundary wall
    platforms.add(Platform(-_boundary_thickness, level_min_y_absolute - _boundary_thickness, _boundary_thickness, _boundary_wall_height, C.DARK_GRAY, platform_type="boundary_wall_left"))
    # Right boundary wall
    platforms.add(Platform(map_total_width_pixels, level_min_y_absolute - _boundary_thickness, _boundary_thickness, _boundary_wall_height, C.DARK_GRAY, platform_type="boundary_wall_right"))

    print(f"Map 'load_map_1' loaded with: {len(platforms)} platforms, {len(ladders)} ladders, {len(hazards)} hazards.") # Game-side log
    return (platforms, ladders, hazards, enemy_spawns_data, collectible_spawns_data,
            player1_spawn,
            map_total_width_pixels, level_min_y_absolute, level_max_y_absolute,
            main_ground_y_reference, main_ground_height_reference,
            LEVEL_SPECIFIC_BACKGROUND_COLOR) # Return background color
