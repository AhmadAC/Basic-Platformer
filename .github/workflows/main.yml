name: Build Python Game with Dynamic Spec

on:
  push:
    branches:
      - Best-Version-28-05
  pull_request:
    branches:
      - Best-Version-28-05
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Platformer for Windows
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: requirements.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if (Test-Path requirements.txt) {
            pip install -r requirements.txt
        } else {
            Write-Host "requirements.txt not found. Installing default PyInstaller dependencies."
            pip install pyinstaller pygame PySide6 Pillow numpy 
        }
      shell: pwsh

    - name: Generate Platformer.spec
      shell: bash
      run: |
        echo "# -*- mode: python ; coding: utf-8 -*-" > Platformer.spec
        echo "block_cipher = None" >> Platformer.spec
        echo "a = Analysis(" >> Platformer.spec
        echo "    ['app_core.py']," >> Platformer.spec  # <--- UPDATED TO app_core.py
        echo "    pathex=['.']," >> Platformer.spec
        echo "    binaries=[]," >> Platformer.spec
        echo "    datas=[" >> Platformer.spec
        echo "        ('characters/assets', 'characters/assets')," >> Platformer.spec
        echo "        ('characters/cactus', 'characters/cactus')," >> Platformer.spec
        echo "        ('characters/gray', 'characters/gray')," >> Platformer.spec
        echo "        ('characters/green', 'characters/green')," >> Platformer.spec
        echo "        ('characters/items', 'characters/items')," >> Platformer.spec
        echo "        ('characters/orange', 'characters/orange')," >> Platformer.spec
        echo "        ('characters/pink', 'characters/pink')," >> Platformer.spec
        echo "        ('characters/player1', 'characters/player1')," >> Platformer.spec
        echo "        ('characters/player2', 'characters/player2')," >> Platformer.spec
        echo "        ('characters/player3', 'characters/player3')," >> Platformer.spec
        echo "        ('characters/player4', 'characters/player4')," >> Platformer.spec
        echo "        ('characters/purple', 'characters/purple')," >> Platformer.spec
        echo "        ('characters/Shadow', 'characters/Shadow')," >> Platformer.spec
        echo "        ('characters/Stone', 'characters/Stone')," >> Platformer.spec
        echo "        ('characters/truck', 'characters/truck')," >> Platformer.spec
        echo "        ('characters/weapons', 'characters/weapons')," >> Platformer.spec
        echo "        ('characters/yellow', 'characters/yellow')," >> Platformer.spec
        echo "        ('maps', 'maps')," >> Platformer.spec
        echo "        ('controller_settings', 'controller_settings')," >> Platformer.spec
        echo "        ('3d models', '3d models')," >> Platformer.spec
        echo "        ('game_config.json', '.')," >> Platformer.spec
        echo "    ]," >> Platformer.spec
        echo "    hiddenimports=[" >> Platformer.spec
        echo "        'PIL'," >> Platformer.spec
        echo "        'PIL.Image'," >> Platformer.spec
        echo "        'numpy'," >> Platformer.spec
        echo "        'PySide6.QtGui'," >> Platformer.spec
        echo "        'PySide6.QtCore'," >> Platformer.spec
        echo "        'PySide6.QtWidgets'," >> Platformer.spec
        echo "        'pygame'," >> Platformer.spec
        echo "    ]," >> Platformer.spec
        echo "    hookspath=[]," >> Platformer.spec
        echo "    hooksconfig={}," >> Platformer.spec
        echo "    runtime_hooks=[]," >> Platformer.spec
        echo "    excludes=[]," >> Platformer.spec
        echo "    win_no_prefer_redirects=False," >> Platformer.spec
        echo "    win_private_assemblies=False," >> Platformer.spec
        echo "    cipher=block_cipher," >> Platformer.spec
        echo "    noarchive=False," >> Platformer.spec
        echo "    optimize=0" >> Platformer.spec
        echo ")" >> Platformer.spec
        echo "pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)" >> Platformer.spec
        echo "exe = EXE(" >> Platformer.spec
        echo "    pyz," >> Platformer.spec
        echo "    a.scripts," >> Platformer.spec
        echo "    []," >> Platformer.spec
        echo "    a.zipfiles," >> Platformer.spec
        echo "    a.datas," >> Platformer.spec
        echo "    name='Platformer'," >> Platformer.spec
        echo "    debug=False," >> Platformer.spec
        echo "    bootloader_ignore_signals=False," >> Platformer.spec
        echo "    strip=False," >> Platformer.spec
        echo "    upx=True," >> Platformer.spec
        echo "    upx_exclude=[]," >> Platformer.spec
        echo "    runtime_tmpdir=None," >> Platformer.spec
        echo "    console=False," >> Platformer.spec
        echo ")" >> Platformer.spec
        echo "coll = COLLECT(" >> Platformer.spec
        echo "    exe," >> Platformer.spec
        echo "    a.binaries," >> Platformer.spec
        echo "    a.zipfiles," >> Platformer.spec
        echo "    a.datas," >> Platformer.spec
        echo "    strip=False," >> Platformer.spec
        echo "    upx=True," >> Platformer.spec
        echo "    upx_exclude=[]," >> Platformer.spec
        echo "    name='Platformer'" >> Platformer.spec
        echo ")" >> Platformer.spec

    - name: Display generated Platformer.spec
      if: always()
      run: |
        echo "--- Generated Platformer.spec content ---"
        type Platformer.spec 
        echo "-----------------------------------------"
      shell: pwsh

    - name: Build Platformer executable from Spec File
      run: |
        pyinstaller --noconfirm --log-level INFO Platformer.spec
      shell: pwsh

    - name: Upload Platformer Windows Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Platformer-Windows-Release
        path: dist/Platformer/
        if-no-files-found: error