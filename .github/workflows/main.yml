name: Build Windows Executable

# Controls when the workflow will run
on:
  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs on pushes targeting the main branch (optional)
  push:
    branches: [ "main" ]

  # Runs when a new release is published on GitHub
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest # Use a Windows runner

    steps:
      # 1. Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          # <<< CHANGE: Add caching based on requirements.txt >>>
          cache: 'pip'
          cache-dependency-path: requirements.txt

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # <<< CHANGE: Install from requirements.txt >>>
          pip install -r requirements.txt

      # 4. Build the executable using PyInstaller and the spec file
      #    (main.spec should be configured for --onefile)
      - name: Build with PyInstaller
        run: pyinstaller main.spec --noconfirm --log-level INFO

      # 5. Upload the artifact (the generated SINGLE .exe file)
      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: BasicPlatformer-Windows
          path: dist/BasicPlatformer.exe
          if-no-files-found: error
